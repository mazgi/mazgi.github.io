<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on mazgi.log</title>
    <link>https://mazgi.github.io/ja/tags/aws/</link>
    <description>Recent content in aws on mazgi.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Jun 2019 12:12:44 +0000</lastBuildDate><atom:link href="https://mazgi.github.io/ja/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWSストレージ概観</title>
      <link>https://mazgi.github.io/ja/posts/2019.06/the-trend-of-aws-storages/</link>
      <pubDate>Sat, 22 Jun 2019 12:12:44 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2019.06/the-trend-of-aws-storages/</guid>
      <description>AWS で使えるローカルストレージと NFS ストレージを一通り試してみました。 GCP 編はこちら。 About ベンチマークは fio コマンドで取得した。 機械学習のワークロード</description>
    </item>
    
    <item>
      <title>安全かつ最小にTerraformでGPUサーバーを起動する(AWS編)</title>
      <link>https://mazgi.github.io/ja/posts/2019.06/the-simplest-ml-environment-with-terraform-on-aws/</link>
      <pubDate>Tue, 11 Jun 2019 14:27:24 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2019.06/the-simplest-ml-environment-with-terraform-on-aws/</guid>
      <description>普段、会社でやっている ML Ops 業務の振り返りを兼ねて最低限必要そうな Amazon VPC 構成用の Terraform Module を作りました。 そして Module には&amp;quot;最小構成&amp;quot;の</description>
    </item>
    
    <item>
      <title>AI時代のDocker &#43; XaaS簡単理解</title>
      <link>https://mazgi.github.io/ja/posts/2019.05/brief-description-of-xaas-in-the-ai-era/</link>
      <pubDate>Mon, 27 May 2019 22:04:33 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2019.05/brief-description-of-xaas-in-the-ai-era/</guid>
      <description>私が所属しているDeNA AI システム部の部内勉強会で Docker と XaaS（ザース）の話をさせていただいたので資料を公開します。 XaaS（ザース）は IaaS, FaaS,</description>
    </item>
    
    <item>
      <title>GitHub&#43;CircleCI&#43;S3でNoOpsなBlogを構築した</title>
      <link>https://mazgi.github.io/ja/posts/2019.04/built-noops-blog-with-github-circleci-s3/</link>
      <pubDate>Thu, 25 Apr 2019 03:37:18 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2019.04/built-noops-blog-with-github-circleci-s3/</guid>
      <description>本業の傍ら会社の技術 Blog リニューアルに携わっており、概要を Advent Calendar で「DeNA Engineers&#39; Blog をリニューアルしている話」として書きました。 「DeNA Engineers&#39; Blog をリニ</description>
    </item>
    
    <item>
      <title>Amazon SageMaker実運用: &#34;Lifecycle Configuration&#34;でEFSを自動マウント</title>
      <link>https://mazgi.github.io/ja/posts/2018.05/sagemaker-efs-auto-mount-with-lifecycles-configuration/</link>
      <pubDate>Thu, 10 May 2018 02:03:25 +0900</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2018.05/sagemaker-efs-auto-mount-with-lifecycles-configuration/</guid>
      <description>前回の記事に続いてマネージド Jupyter サービスAmazon SageMakerの Notebook インスタンスに EFS のボリュームを自動マウントする。 なおこの発言の真意で</description>
    </item>
    
    <item>
      <title>Amazon SageMaker実運用: NAT GatewayでNotebookの接続元IPアドレスを固定する</title>
      <link>https://mazgi.github.io/ja/posts/2018.05/sagemaker-internet-access-via-nat-gateway/</link>
      <pubDate>Wed, 09 May 2018 01:46:59 +0900</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2018.05/sagemaker-internet-access-via-nat-gateway/</guid>
      <description>Amazon SageMakerを使っていて Notebook インスタンスから以下を行いたくなったので構成を考えてみた。 Notebook インスタンスから外部システムにアクセスしたい 対</description>
    </item>
    
    <item>
      <title>S3 &#43; Lambda &#43; SQSでファイル処理する仕組みをTerraformで構築する</title>
      <link>https://mazgi.github.io/ja/posts/2018.04/processing-with-s3-lambda-sqs/</link>
      <pubDate>Tue, 17 Apr 2018 00:12:10 +0900</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2018.04/processing-with-s3-lambda-sqs/</guid>
      <description>画像や音声を S3 にアップロードすると Lambda でいい感じに前処理をして SQS に通知くれるような仕組みを想定して作ってみる。 名前は仮に「media-proc</description>
    </item>
    
    <item>
      <title>Amazon SageMakerをそれなりの人数で使うときの設定</title>
      <link>https://mazgi.github.io/ja/posts/2018.03/setup-amazon-sagemaker/</link>
      <pubDate>Tue, 06 Mar 2018 00:06:04 +0900</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2018.03/setup-amazon-sagemaker/</guid>
      <description>AWS のマネージド Jupyter サービスである「Amazon SageMaker」を数十名規模で使う機会があったのでインフラ的に設定した内容などを書いておく。</description>
    </item>
    
    <item>
      <title>SSE-KMSで暗号化したS3バケットをs3fsでmountする</title>
      <link>https://mazgi.github.io/ja/posts/2018.03/s3fs-for-s3-with-sse-kms/</link>
      <pubDate>Thu, 01 Mar 2018 04:32:56 +0900</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2018.03/s3fs-for-s3-with-sse-kms/</guid>
      <description>タイトルの通り「AWS Key Management Service (AWS KMS) 」を使って暗号化した Amazon S3 バケットを s3fs で Ubuntu 16 上で mount した。 KMS については以下のドキュメントが詳しいが要は暗号化の際</description>
    </item>
    
    <item>
      <title>S3 &#43; CloudFrontをTerraformで設定してCircleCIで更新する</title>
      <link>https://mazgi.github.io/ja/posts/2018.02/s3&#43;cloudfront-website-with-terraform-and-circleci/</link>
      <pubDate>Thu, 15 Feb 2018 05:24:40 +0900</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2018.02/s3&#43;cloudfront-website-with-terraform-and-circleci/</guid>
      <description>「Terraform で S3+CloudFront+SSL/TLS 証明書 w/ ACM を設定して Hugo で作った static な Web サイトを CircleCI で自動 deploy する」やつができた。 できたもの 普通のいかにもHugoで作った Web</description>
    </item>
    
  </channel>
</rss>
