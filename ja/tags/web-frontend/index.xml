<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web-frontend on mazgi.log</title>
    <link>https://mazgi.github.io/ja/tags/web-frontend/</link>
    <description>Recent content in web-frontend on mazgi.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Jan 2020 12:22:49 +0000</lastBuildDate><atom:link href="https://mazgi.github.io/ja/tags/web-frontend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Frontend を Next.js &#43; TypeScript で書いて Docker でビルドする</title>
      <link>https://mazgi.github.io/ja/posts/2020/01/dockerized-typescript-nextjs-project/</link>
      <pubDate>Wed, 22 Jan 2020 12:22:49 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2020/01/dockerized-typescript-nextjs-project/</guid>
      <description>&lt;p&gt;「手っ取り早く Web インターフェースを手に入れる方法 2020」シリーズ(?)の&lt;a href=&#34;https://mazgi.github.io/ja/posts/2020/01/dockerized-typescript-webapi-project/&#34;&gt;BFF サンプルプロジェクト&lt;/a&gt; と同じように Web Frontend サンプルプロジェクトを作ってみました。&lt;/p&gt;
&lt;p&gt;今回もプロジェクト構成やビルド方法の検証が主目的です。&lt;br&gt;
そのためアプリケーション自体は Docker イメージを実行すると&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt;の Web サーバーが起動しこんなページが表示されるだけのシンプルな機能しかありません。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shellsession&#34; data-lang=&#34;shellsession&#34;&gt;❯ docker run -it --rm -p 3000:3000 b2ee27d0d01d

&amp;gt; @ start /app
&amp;gt; next start

&amp;gt; Ready on http://localhost:3000

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>なぜそのプロジェクトでKubernetesが選択されたか</title>
      <link>https://mazgi.github.io/ja/posts/2019.12/why-choose-k8s-for-the-project/</link>
      <pubDate>Wed, 18 Dec 2019 23:35:25 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2019.12/why-choose-k8s-for-the-project/</guid>
      <description>&lt;p&gt;これは&lt;a href=&#34;https://mazgi.github.io/ja/posts/2019.12/went-to-gcpug-tokyo-dec-2019/&#34;&gt;「GCPUG Tokyo December 2019」の記事&lt;/a&gt;から「Why Kubernetes? Why not GAE or others?」部分を切り出した記事です。&lt;br&gt;
本記事のコンテキストとして、イベントでお話しさせていただいた資料「&lt;a href=&#34;https://speakerdeck.com/mazgi/fast-development-for-ml-web-service-on-gke-and-gcp&#34;&gt;ML アプリケーション短期開発 / Fast development for ML Web Service on GKE &amp;amp; GCP&lt;/a&gt;」」を事前にご参照いただけると幸いです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>「GCPUG Tokyo December 2019」でお話させていただきました</title>
      <link>https://mazgi.github.io/ja/posts/2019.12/went-to-gcpug-tokyo-dec-2019/</link>
      <pubDate>Wed, 18 Dec 2019 22:35:25 +0000</pubDate>
      
      <guid>https://mazgi.github.io/ja/posts/2019.12/went-to-gcpug-tokyo-dec-2019/</guid>
      <description>&lt;p&gt;昨日 12/18 に開催された「&lt;a href=&#34;https://gcpug-tokyo.connpass.com/event/152607/&#34;&gt;GCPUG Tokyo December 2019&lt;/a&gt;」で「&lt;a href=&#34;https://speakerdeck.com/mazgi/fast-development-for-ml-web-service-on-gke-and-gcp&#34;&gt;ML アプリケーション短期開発 / Fast development for ML Web Service on GKE &amp;amp; GCP&lt;/a&gt;」と題してお話しさせていただきました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
  </channel>
</rss>
